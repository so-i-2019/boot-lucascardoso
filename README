 Copyright (c) 2019 - Lucas Sobral Fontes Cardoso <lucas.sobral.cardoso@usp.br>
 
 This is free software and distributed under GNU GPL vr.3. Please refer 
 to the companion file LICENSING or to the online documentation at
 https://www.gnu.org/licenses/gpl-3.0.txt for further information.

    This is a very simple minesweeper game put into a bootloader.

     ==================================================================
        The game consists of a board where at every cell you can, or not,
    find a bomb. The goal is to check every cell that does not have
    any bombs, using the information of adjacent bombs to determine
    which cells are safe. Sometimes though, you will need to take some
    risks.

    How to play:
    w - Move cursor up
    s - Move cursor down
    a - Move cursor left
    d - Move cursor right
    q - Mark cell as possible bomb
    e - Check cell. If no bomb is on the cell, it shows how many
        bombs are on the 8 adjacent cells to this one. If there is
        a bomb on the cell the game is over.
    j - Goes direcly into game over screen.

     ===================================================================
    About how it works:
    ------------------
      First part of the program generates the game board as a vector at adress 0x7e00,
    inside the free memory area. Using a LCG (Linear Congruential Generator [1]) to generate
    pseudo-random numbers to populate the board with bombs, at the same time updating the
    bomb neighbour spaces to count the ammount of bombs around.
      Then we draw a basic board of '.' to show the player the board size, writing direcly
    on the video RAM at adress 0xb8000. After the board layout is drawn we proceed to read
    user input. We move the cursor and update the text through the use of the BIOS. If the
    player chooses to check a certain position of the board, we read from our vector at
    0x7e00 and update the screen, showing the number of adjacent bombs to that cell, or
    changing the game screen to a game over screen, in case the player checks a bomb and
    the program stops at an infinite loop, after writing Game Over on the screen.

    Some issues:
    -----------
      The game works perfectly on QEMU emulator, but when I tried to run it on a real machine
    I had some issues. The game board wasn't drawn, it seems like the vector wasn't made
    correctly aswell. Although every part of the program that uses the BIOS works correctly.
      It is impossible though to fit this game on 512 using only the BIOS methods, I also
    couldn't figure exactly why writing on the Video RAM or Free Memory Area RAM wasn't
    working.
      Since I found this out on the last day we can work on the assignment I'm afraid I don't
    have time to change it to a simpler program that I can do only with the BIOS.

    References:
    ----------

    [1] Linear Congruential Generator - pseudo-random number generator
        https://en.wikipedia.org/wiki/Linear_congruential_generator